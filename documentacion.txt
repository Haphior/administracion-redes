Descripción del proyecto

Este proyecto presenta una clase AdministradorRedes que permite gestionar información sobre campus y dispositivos de red. La clase ofrece funcionalidades para:

Cargar y guardar datos desde un archivo JSON.

Administrar campus:

Agregar nuevos campus.
Modificar la descripción de un campus existente.
Eliminar un campus existente.

Administrar dispositivos de red dentro de un campus:

Agregar nuevos dispositivos.
Modificar la información de un dispositivo existente.
Eliminar un dispositivo existente.

Convertir los datos de la instancia de la clase a formato de texto para visualización.

Estructura del código

El código se organiza en las siguientes clases:

Campus: Representa un campus con su nombre y descripción.

Dispositivo: Representa un dispositivo de red con su nombre, modelo, capa, interfaces (con sus respectivas direcciones IP y máscaras de red), VLANs y servicios configurados.

AdministradorRedes: La clase principal que gestiona la información sobre campus y dispositivos.

Funcionalidades principales

Las funcionalidades principales de la clase AdministradorRedes se implementan en los siguientes métodos:

__init__(): Inicializa la instancia de la clase con el nombre del archivo JSON utilizado para cargar y guardar los datos.

cargar_desde_archivo(): Carga los datos desde un archivo JSON existente y los almacena en la instancia de la clase.

guardar_en_archivo(): Guarda los datos de la instancia de la clase en un archivo JSON.

interpretar_json_y_guardar_texto(): Interpreta los datos de un archivo JSON, los convierte a formato de texto y los guarda en un archivo.

convertir_a_formato_texto(): Convierte los datos de la instancia de la clase a formato de texto.

menu_principal(): Muestra el menú principal de la aplicación y permite al usuario seleccionar una opción.

administrar_campus(): Muestra el menú de administración de campus y permite al usuario seleccionar una opción.

administrar_dispositivos(): Muestra el menú de administración de dispositivos y permite al usuario seleccionar una opción.

agregar_campus(): Agrega un nuevo campus a la instancia de la clase.

modificar_campus(): Modifica la descripción de un campus existente.

borrar_campus(): Elimina un campus existente.

agregar_dispositivos(): Agrega nuevos dispositivos a un campus existente.

modificar_dispositivo(): Modifica la información de un dispositivo existente.

borrar_dispositivo(): Elimina un dispositivo existente.

seleccionar_capa(): Muestra el menú de selección de capa y permite al usuario seleccionar una opción.

ingresar_ips_masks(): Solicita al usuario ingresar las direcciones IP y máscaras de red para las interfaces de un dispositivo.

ingresar_vlans(): Solicita al usuario ingresar los nombres y números de VLAN para un dispositivo.

Uso del código

Para utilizar el código, siga estos pasos:

Guarde el código en un archivo Python (por ejemplo, administrador_redes.py).
Ejecute el archivo Python desde la terminal:
python administrador_redes.py
Siga las instrucciones del menú principal para administrar la información sobre campus y dispositivos.
